/*
Auto-generated by: https:ithub.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 Noble_warrior_face_c_1009135354_refine.glb 
*/

"use client";
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { useFrame } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh;
  };
  materials: {
    [key: string]: THREE.Material;
  };
};

const Warrior = React.memo(function Warrior({ scale = 2, ...props }: React.ComponentProps<'group'>) {
  const { nodes, materials } = useGLTF('/models/noble-warrior.glb') as GLTFResult;
  
  const modelRef = useRef();
  
  useFrame((state, delta, xrFrame) => {
    modelRef.current.position.y += Math.sin(state.clock.getElapsedTime()) * 0.01;
    modelRef.current.position.y -= Math.sin(state.clock.getElapsedTime()) * 0.001;

  })
  
  return (
    <group {...props} dispose={null} 
      scale={scale}
      ref={modelRef}  
    >
      <mesh geometry={nodes.mesh_0.geometry} material={nodes.mesh_0.material} />
    </group>
  );
});

export default Warrior;
useGLTF.preload('/models/noble-warrior.glb');
